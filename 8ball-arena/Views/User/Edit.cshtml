@model _8ball_arena.Models.UserViewModel
@{
    ViewData["Title"] = "Edit Profile";
}
<link href="~/css/Shared/DragDrop.css" rel="stylesheet" asp-append-version="true" />

<h2>Edit Profile</h2>
@using (Html.BeginForm("Edit", "User", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.Username)
        @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control bg-dark text-light" } })
        @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
        @if (ViewBag.DuplicateError != null)
		{
			<div class="text-danger">@ViewBag.DuplicateError</div>
		}
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Email)
        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control bg-dark text-light" } })
        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.Label("Profile Picture")
        <div id="dropZone" class="drop-zone">
            <p id="dropText">Drag & Drop your image here or click to upload</p>
            <input type="file" name="profilePicture" id="profilePicture" class="file-input" onchange="handleFileUpload(event)" />
            <img id="preview" class="preview-img" alt="Preview" style="display: none;" />
        </div>
    </div>

    <script>
        const dropZone = document.getElementById('dropZone');
        const fileInput = document.getElementById('profilePicture');
        const previewImg = document.getElementById('preview');
        const dropText = document.getElementById('dropText');

        dropZone.addEventListener('dragover', (e) => {
            e.preventDefault();
            dropZone.classList.add('drag-over');
        });

        dropZone.addEventListener('dragleave', () => {
            dropZone.classList.remove('drag-over');
        });

        dropZone.addEventListener('drop', (e) => {
            e.preventDefault();
            dropZone.classList.remove('drag-over');

            const file = e.dataTransfer.files[0];
            if (file) {
                fileInput.files = e.dataTransfer.files;
                handleFileUpload({ target: { files: [file] } });
            }
        });

        const handleFileUpload = (event) => {
            const file = event.target.files[0];
            if (file) {
                const reader = new FileReader();
                reader.onload = () => {
                    previewImg.src = reader.result;
                    previewImg.style.display = "block";
                    dropText.style.display = "none";
                };
                reader.onloadend = () => {
                    const img = new Image();
                    img.src = reader.result;
                    img.onload = () => {
                        const aspectRatio = img.width / img.height;
                        dropZone.style.aspectRatio = aspectRatio.toString();
                    };
                };
                reader.readAsDataURL(file);
            }
        };
    </script>

    <button type="submit" class="btn btn-primary mt-3">Save</button>
    <a asp-action="Details" asp-route-id="@Model.Id" class="btn btn-secondary mt-3">Cancel</a>
}
